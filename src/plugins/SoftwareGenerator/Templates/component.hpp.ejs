#ifndef CLIENT_HPP
#define CLIENT_HPP
#include "node/Component.hpp"

// Messages and Services required for this component
<%
for (var i=0; i < compInfo.requiredTypes.length; i++) {
-%>
#include "<%= compInfo.requiredTypes[i].packageName %>/<%= compInfo.requiredTypes[i].name %>.h"
<%
}
-%>

#ifdef USE_ROSMOD
  #include "rosmod/rosmod_ros.h"
#else
  #ifdef USE_ROSCPP
    #include "ros/ros.h"
  #endif
#endif

// User Global Forwards
<%= compInfo.forwards %>

class <%= compInfo.name %> : public Component
{
public:
  // Constructor
  <%= compInfo.name %>(ComponentConfig& _config, int argc, char **argv)
  : Component(_config, argc, argv) {}

  // Initialization
  void init_timer_operation(const NAMESPACE::TimerEvent& event);

  // Timers
<%
for (var tmr in compInfo.timers) {
-%>
  void <%= compInfo.timers[tmr].name %>_operation(const NAMESPACE::TimerEvent& event);
<%
}
-%>
  // Subscribers
<%
for (var sub in compInfo.subscribers) {
-%>
  void <%= compInfo.subscribers[sub].name %>_operation(const <%= compInfo.subscribers[sub].topic.packageName %>::<%= compInfo.subscribers[sub].topic.name %>::ConstPtr& received_data);
<%
}
-%>
  // Servers
<%
for (var srv in compInfo.servers) {
-%>
  void <%= compInfo.servers[srv].name %>_operation(const <%= compInfo.servers[srv].service.packageName %>::<%= compInfo.servers[srv].service.name %>::Request &req, <%= compInfo.servers[srv].service.packageName %>::<%= compInfo.servers[srv].service.name %>::Response &res);
<%
}
-%>

  // Start up
  void startUp();

  // Destructor
  ~<%= compInfo.name %>();

private:

<%
for (var tmr in compInfo.timers) {
-%>
  NAMESPACE::Timer <%= compInfo.timers[tmr].name %>;
<%
}
-%>
<%
for (var svr in compInfo.servers) {
-%>
  NAMESPACE::ServiceServer <%= compInfo.servers[svr].name %>;
<%
}
-%>
<%
for (var clt in compInfo.clients) {
 -%>
  NAMESPACE::ServiceClient <%= compInfo.clients[clt].name %>;
<%
}
-%>
<%
for (var pub in compInfo.publishers) {
 -%>
  NAMESPACE::Publisher <%= compInfo.publishers[pub].name %>;
<%
}
-%>
<%
for (var sub in compInfo.subscribers) {
 -%>
  // <%= compInfo.subscribers[sub].name %>
  NAMESPACE::Subscriber <%= compInfo.subscribers[sub].name %>;
<%
}
-%>

  // User Private Members
  <%= compInfo.members %>
};

#endif

