/*globals define, WebGMEGlobal*/
/*jshint browser: true*/

/**
 * Generated by VisualizerGenerator 1.7.0 from webgme on Tue Sep 27 2016 23:15:32 GMT-0500 (Central Daylight Time).
 */

define(['./cytoscape.min','./cola.min','css!./styles/CommVizWidget.css'], function (cytoscape, cola) {
    'use strict';

    var CommVizWidget,
        WIDGET_CLASS = 'comm-viz';

    CommVizWidget = function (logger, container) {
        this._logger = logger.fork('Widget');

        this._el = container;

        this.nodes = {};
	this.childNodes = {};
        this._initialize();

        this._logger.debug('ctor finished');
    };

    CommVizWidget.prototype._initialize = function () {
        var width = this._el.width(),
            height = this._el.height(),
            self = this;

        // set widget class
        this._el.addClass(WIDGET_CLASS);

	this._cy = cytoscape({
	    container: this._el,

	    /*
            layout: {
		name: 'grid'
            },

            style: [
		{
		    selector: 'node',
		    style: {
			'background-color': '#ad1a66'
		    }
		},

		{
		    selector: ':parent',
		    style: {
			'background-opacity': 0.333
		    }
		},

		{
		    selector: 'edge',
		    style: {
			'width': 3,
			'line-color': '#ad1a66'
		    }
		},
	    ],
	    */
	    
	    style: [ // the stylesheet for the graph
		{
		    selector: 'node',
		    style: {
			'background-color': '#666',
			'label': 'data(id)'
		    }
		},

		{
		    selector: 'edge',
		    style: {
			'width': 3,
			'line-color': '#ccc',
			'target-arrow-color': '#ccc',
			'target-arrow-shape': 'triangle'
		    }
		}
	    ],

	    layout: {
		name: 'grid',
		rows: 1
	    },

	    // interaction options:
	    minZoom: 1e-50,
	    maxZoom: 1e50,
	    zoomingEnabled: true,
	    userZoomingEnabled: true,
	    panningEnabled: true,
	    userPanningEnabled: true,
	    boxSelectionEnabled: false,
	    selectionType: 'single',
	    touchTapThreshold: 8,
	    desktopTapThreshold: 4,
	    autolock: false,
	    autoungrabify: false,
	    autounselectify: false,

	    // rendering options:
	    headless: false,
	    styleEnabled: true,
	    hideEdgesOnViewport: false,
	    hideLabelsOnViewport: false,
	    textureOnViewport: false,
	    motionBlur: false,
	    motionBlurOpacity: 0.2,
	    wheelSensitivity: 1,
	    pixelRatio: 'auto'	    
	}); 
    };

    CommVizWidget.prototype.onWidgetContainerResize = function (width, height) {
        this._logger.debug('Widget is resizing...');
    };

    CommVizWidget.prototype.createChildren = function(desc) {
	var self = this;
	if (self.childNodes[desc.id] && self.childNodes[desc.id].length) {
	    self.childNodes[desc.id].map(function(childDesc) {
		self._logger.error('creating node: '+childDesc.name +' with parent '+desc.name);
		self._cy.add({
		    group: 'nodes',
		    data: {
			id: childDesc.name,
			parent: desc.name
		    }
		});
		self.createChildren(childDesc);
	    });
	    self.childNodes[desc.id] = [];
	}
    };
    
    // Adding/Removing/Updating items
    CommVizWidget.prototype.addNode = function (desc) {
	var self = this;
        if (desc) {
            // Add node to a table of nodes
            self.nodes[desc.id] = desc;
	    self._logger.error('got node: '+desc.name);
	    if (self.nodes[desc.parentId]) {
		self._logger.error('creating node: '+desc.name +' with parent '+self.nodes[desc.parentId].name);
		self._cy.add({
		    group: 'nodes',
		    data: {
			id: desc.name,
			parent: desc.name
		    }
		});
		self.createChildren(desc);
	    }
	    else {
		if (!self.childNodes[desc.parentId] || !self.childNodes[desc.parentId].length) {
		    self.childNodes[desc.parentId] = [];
		}
		self.childNodes[desc.parentId].push(desc);
	    }
	}
    };

    CommVizWidget.prototype.removeNode = function (gmeId) {
        var desc = this.nodes[gmeId];
        this._el.append('<div>Removing node "' + desc.name + '"</div>');
        delete this.nodes[gmeId];
    };

    CommVizWidget.prototype.updateNode = function (desc) {
        if (desc) {
            this._logger.debug('Updating node:', desc);
            this._el.append('<div>Updating node "' + desc.name + '"</div>');
        }
    };

    /* * * * * * * * Visualizer event handlers * * * * * * * */

    CommVizWidget.prototype.onBackgroundDblClick = function () {
        this._el.append('<div>Background was double-clicked!!</div>');
    };

    /* * * * * * * * Visualizer life cycle callbacks * * * * * * * */
    CommVizWidget.prototype.destroy = function () {
    };

    CommVizWidget.prototype.onActivate = function () {
        this._logger.debug('CommVizWidget has been activated');
    };

    CommVizWidget.prototype.onDeactivate = function () {
        this._logger.debug('CommVizWidget has been deactivated');
    };

    return CommVizWidget;
});
